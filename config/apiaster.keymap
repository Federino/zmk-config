#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define BASE          0
#define HANDSDOWN_NEU 1 //Promethium https://cyanophage.github.io/playground.html?layout=fpdlx%C3%B1uoybzsnthk%2Caeicqvwgmj-.%27%3D%2F%5Cr&mode=ergo&lan=spanish
#define MOVEMENT      2
#define SYMBOLS       3
#define NUMBERS       4
#define WASD          5
#define EXTRA_WASD    6

/* Layout */
//    0  1  2  3  4      5  6  7  8  9 
//   10 11 12 13 14     15 16 17 18 19 
//20 21 22 23 24 25     26 27 28 29 30 31 
//32 33 34 35 36 37     38 39 40 41 42 43
//         44 45 46     47 48 49

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34 35 36 37
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 38 39 40 41 42 43
#define THUMBS_L 44 45 46
#define THUMBS_R 47 48 49


#define DEF_COMMA ,
#define DEF_TEST(a) \
        <a>,

#define DEF_TEST_FFF(a) \
        <a>

//Â´TODO hacer que todos los macros, combos, etc sean macros de C. Queda mas limpio y facil de leer
#define COMBO(a, b, c, d, e)        \
        combo_##a {                 \
            timeout-ms    = <b>;    \
            key-positions = <c>;    \
            layers        = <d>;    \
            bindings      = <e>;    \
        };                          \

#define MACRO(a, b, c)                         \
        macro_##a: macro_##a {                 \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <b>;              \
            bindings = c;                      \
        };                                     \

#define TAP_DANCE(NOMBRE, TAPPING_TERM_ms, A_BINDING, B_BINDING) \
        NOMBRE: tap_dance_##NOMBRE {                 \
            compatible = "zmk,behavior-tap-dance";               \
            #binding-cells = <0>;                                \
            tapping-term-ms = <TAPPING_TERM_ms>;                 \
            bindings = <&kp A_BINDING>, <&kp B_BINDING>;         \
        };                                                       \

//&caps_word {
//    continue-list = <UNDERSCORE MINUS>;
//};

/ {    
    macros {
        //MACRO(change_language, 0, DEF_TEST(&macro_press &kp LGUI &kp SPACE) DEF_TEST_FFF(&macro_release &kp LGUI &kp SPACE))
        //MACRO(flecha_pointer, 0, DEF_TEST(&macro_press &kp FSLH) DEF_TEST(&macro_press &kp LS(NON_US_BACKSLASH)) DEF_TEST(&macro_release &kp FSLH)  DEF_TEST_FFF(&macro_release &kp LS(NON_US_BACKSLASH)))
        change_language: change_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp LGUI &kp SPACE>,
                       <&macro_release &kp LGUI &kp SPACE>;
        };

        flecha_pointer: flecha_pointer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp FSLH >,
                       <&macro_release &kp FSLH >,
                       <&macro_press   &kp LS(NON_US_BACKSLASH) >,
		               <&macro_release &kp LS(NON_US_BACKSLASH) >;
        };
	
        m_copiar: m_copiar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp LCTRL >,
                       <&macro_press   &kp C >,
                       <&macro_release &kp LCTRL >,
		       <&macro_release &kp C >;
        };
	
        m_cortar: m_cortar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp LCTRL >,
                       <&macro_press   &kp X >,
                       <&macro_release &kp LCTRL >,
		       <&macro_release &kp X >;
        };

        m_pegar: m_pegar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp LCTRL >,
                       <&macro_press   &kp V >,
                       <&macro_release &kp LCTRL >,
		       <&macro_release &kp V >;
        };

        m_deshacer: m_deshacer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp LCTRL >,
                       <&macro_press   &kp Z >,
                       <&macro_release &kp LCTRL >,
		       <&macro_release &kp Z >;
        };

        m_letras_que: m_letras_que {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp Q >,
                       <&macro_release &kp Q >,
                       <&macro_press   &kp U >,
                       <&macro_release &kp U >,
                       <&macro_press   &kp E >,
		               <&macro_release &kp E >;
        };

        m_test_aaaaa: m_test_aaaaa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp Q >,
                       <&macro_release &kp Q >,
                       <&macro_press   &kp U >,
                       <&macro_release &kp U >;
        };

        m_close_window: m_close_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press   &kp LCTRL >,
                       <&macro_press   &kp W >,
                       <&macro_release &kp LCTRL >,
                       <&macro_release &kp W >;
        };

	m_tilde: m_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT >;
        };

	m_tilde_invertida: m_tilde_invertida {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT >;
        };

	m_acento_circunflejo: m_acento_circunflejo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LBKT)>;
        };
    };
    
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////// COMBOS ////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    combos {
        compatible = "zmk,combos";
        COMBO(caps_words         , 50, 27 28 29, BASE HANDSDOWN_NEU, &caps_word)
        COMBO(hands_down_as_base , 50,    12 40, BASE HANDSDOWN_NEU, &tog HANDSDOWN_NEU)
        COMBO(wasd_gaming_toggle , 50,    20 32, BASE HANDSDOWN_NEU, &tog WASD)
        COMBO(change_language    , 50,      0 9, BASE HANDSDOWN_NEU, &change_language)
        COMBO(punto_coma         , 50,    23 28, BASE HANDSDOWN_NEU, &kp LS(COMMA))
        COMBO(flecha_prog        , 50,    14 15, BASE HANDSDOWN_NEU, &flecha_pointer)
        COMBO(dos_puntos         , 50,    24 27, BASE HANDSDOWN_NEU, &kp LS(DOT))
        COMBO(barra_baja         , 50,    36 39, BASE HANDSDOWN_NEU, &kp LS(FSLH))
        COMBO(igual              , 50,    25 26, BASE HANDSDOWN_NEU, &kp LS(N0))

        /////////////////////////////
        // COMBOS QWERTY
        /////////////////////////////
        //COMBO(qwerty_q,      50,    11 12, BASE, &kp Q)
        //COMBO(qwerty_copiar, 50,    12 13, BASE, &m_copiar)
        //COMBO(qwerty_cortar, 50,    13 14, BASE, &m_cortar)
        //COMBO(qwerty_pegar,  50,    11 12, BASE, &m_pegar)

        /////////////////////////////
        // COMBOS HANDS DOWN VIBRANIUM
        /////////////////////////////
        COMBO(handsdown_Q                  , 51, 29 30, HANDSDOWN_NEU     , &kp Q 		 )
        COMBO(handsdown_Qu                 , 50, 12 13, HANDSDOWN_NEU     , &qu_hold_tap Q 0     )
        COMBO(handsdown_Z                  , 50, 17 18, HANDSDOWN_NEU     , &kp Z    	 	 )
        COMBO(handsdown_tilde              , 50, 27 28, BASE HANDSDOWN_NEU, &m_tilde  	         )
        COMBO(handsdown_tilde_invertida    , 50, 28 29, BASE HANDSDOWN_NEU, &m_tilde_invertida   )
        COMBO(handsdown_acento_circunflejo , 50, 27 29, BASE HANDSDOWN_NEU, &m_acento_circunflejo)


    /* Layout */
    //    0  1  2  3  4      5  6  7  8  9 
    //   10 11 12 13 14     15 16 17 18 19 
    //20 21 22 23 24 25     26 27 28 29 30 31 
    //32 33 34 35 36 37     38 39 40 41 42 43
    //         44 45 46     47 48 49
    };

    behaviors {
        hl: home_row_hold_tap_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS_R>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hr: home_row_hold_tap_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS_L>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle layer ON";
            //toggle-mode = "on";
        };

        mt_que: mod_tap_que {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };

        qu_hold_tap: qu_hold_tap {
            compatible      = "zmk,behavior-hold-tap";
            display-name    = "QU Hold Tap";
            #binding-cells  = <2>;
            flavor          = "hold-preferred";
            tapping-term-ms = <200>;
            bindings        = <&kp>, <&m_test_aaaaa>;
        };

    ///////////////////////////////////////////////////////////
    // TAP DANCE SYMBOL LAYER 
    ///////////////////////////////////////////////////////////
        TAP_DANCE(td_parentesis     , 200, LS(N8)      , LS(N9))
        TAP_DANCE(td_brackets       , 200, RA(LBKT)    , RA(RBKT))
        TAP_DANCE(td_cbrackets      , 200, RA(SQT)     , RA(BSLH))
        TAP_DANCE(td_menorque       , 200, NUBS        , LS(NUBS))
        TAP_DANCE(td_exclamaciones  , 200, EQUAL       , LS(N1))
        TAP_DANCE(td_interrogante   , 200, LS(EQUAL)   , LS(MINUS))
        TAP_DANCE(td_puntos         , 200, DOT         , LS(DOT))
        TAP_DANCE(td_coma           , 200, COMMA       , LS(COMMA))
        TAP_DANCE(td_guion          , 200, SLASH       , LS(SLASH))
        TAP_DANCE(td_buscar_vim     , 200, LS(RBRC)    , RA(N3))
        TAP_DANCE(td_marcas_vim     , 200, LS(N2)      , MINUS)
        TAP_DANCE(td_fwdslash       , 200, LS(N7)      , RA(GRAVE))
        TAP_DANCE(td_pipe           , 200, RA(N1)      , RA(N2))
        TAP_DANCE(td_porcentaje     , 200, LS(N5)      , LS(N4))
        TAP_DANCE(td_masmenos       , 200, RBKT        , SLASH)

    ///////////////////////////////////////////////////////////
    // TAP DANCE HANDS DOWN CONFIG
    ///////////////////////////////////////////////////////////
        //td_masmenos: tap_dance_masmenos {
        //    compatible = "zmk,behavior-tap-dance";
        //    label = "tap_dance_masmenos";
        //    #binding-cells = <0>;
        //    tapping-term-ms = <200>;
        //    bindings = <&kp SLASH>, <&kp RBRC>;
        //};

        td_hashtag_arroba: tap_dance_hashtag_arroba {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_hashtag_arroba";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(RA(N3))>, <&kp LC(RA(N2))>;
        };
 
        td_div_asterisco: tap_dance_div_asterisco {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_div_asterisco";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LS(N7)>, <&kp LS(RBRC)>;
        };

        td_comillas_exclamacion: tap_dance_comillas_exclamacion {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_comillas_exclamacion";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LS(N2)>, <&kp LS(N1)>;
        };

        td_comilla_simple_interrogacion: tap_dance_comilla_simple_interrogacion {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_comilla_simple_interrogacion";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp MINUS>, <&kp LS(MINUS)>;
        };

    };


    /////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////// LAYERS /////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////
    keymap {
        compatible = "zmk,keymap";

        QWERTY_layer {
            display-name = "qwerty";
// ------------------------------------------------------------------------------------------------------------
//         |   1   |   2   |    3    |   4    |   5   |              |  6  |   7    |    8    |   9   |   0   |       
//         |   Q   |   W   |    E    |   R    |   T   |              |  Y  |   U    |    I    |   O   |   P   |        
// |  TAB  | ALT/A | GUI/S | SHIFT/D | CTRL/F |   G   |              |  H  | CTRL/J | SHIFT/K | GUI/L | ALT/; | ENTER |
// |   \   |   Z   |   X   |    C    |   V    |   B   |              |  N  |   M    |    ,    |   .   |   /   |   '   |
//                                      | LOWER  | SPACE | ESC |  | DEL |BACK | RAISE  | 
            bindings = <
           &kp N1     &kp N2     &kp N3           &kp N4            &kp N5       /*||*/    &kp N6              &kp N7           &kp N8            &kp N9          &kp N0
           &kp Q      &kp W      &kp E            &kp R             &kp T        /*||*/    &kp Y               &kp U            &kp I             &kp O           &kp P
&kp TAB    &hl LGUI A &hl LALT S &hl LCTRL D      &hl LSHFT F       &kp G        /*||*/    &kp H               &hr RSHFT J      &hr LCTRL K       &hr LALT L      &hr RGUI SEMI &kp ENTER
&kp CAPS   &kp Z      &hl RALT X &kp C            &kp V             &kp B        /*||*/    &mt_que SEMI N      &kp M            &hr RCTRL COMMA   &hr RALT DOT    &kp FSLH      &kp SQT
                                 &lt MOVEMENT ESC &lt SYMBOLS SPACE &lt NUMBERS TAB  /*||*/    &lt NUMBERS ENTER   &lt SYMBOLS BSPC &lt MOVEMENT DEL

                    >;
                };

        HANDS_DOWN_layer {
            display-name = "hands down promethium";
            bindings = <
          &kp N1     &kp N2     &kp N3           &kp N4            &kp N5                /*||*/   &kp N6              &kp N7             &kp N8             &kp N9      &kp N0
          &kp H      &hl RALT F &kp D            &kp L             &kp X                 /*||*/   &kp SEMI            &kp U              &kp O              &hr RALT Y  &kp Q
&kp TAB   &hl LGUI P &hl LALT S &hl LCTRL N      &hl LSHIFT T      &kp K                 /*||*/   &kp COMMA           &hr RSHFT A        &hr RCTRL E        &hr LALT I  &hr RGUI C       		    &kp ENTER
&kp CAPS  &kp V      &kp W      &kp G            &kp M             &kp J                 /*||*/   &kp FSLH            &kp DOT            &kp B              &kp Z       &td_comilla_simple_interrogacion    &kp ENTER
                                &lt MOVEMENT ESC &lt SYMBOLS R     &lt NUMBERS TAB       /*||*/   &lt NUMBERS BSPC    &lt SYMBOLS SPACE  &lt MOVEMENT DEL

                    >;
                };

//        HANDS_DOWN_layer {
//            display-name = "hands down inverted vibranium";
//            bindings = <
//            &kp N1     &kp N2     &kp N3           &kp N4            &kp N5                /*||*/   &kp N6              &kp N7             &kp N8                  &kp N9                    &kp N0
//            &kp B      &hl RALT P &kp L            &kp D             &kp V                 /*||*/   &td_hashtag_arroba  &kp U              &kp O                   &hr RALT Y                &kp F
//&kp TAB     &hl LGUI S &hl LALT C &hl LCTRL N      &hl LSHIFT T      &kp K                 /*||*/   &kp COMMA           &hr RSHFT A        &hr RCTRL E             &hr LALT I                &hr RGUI H       		     &kp ENTER
//&caps_word  &kp X      &kp W      &kp M            &kp G             &kp J                 /*||*/   &kp FSLH            &kp DOT            &td_div_asterisco       &td_comillas_exclamacion  &td_comilla_simple_interrogacion &kp ENTER
//                                  &lt MOVEMENT ESC &lt SYMBOLS R     &lt NUMBERS ENTER     /*||*/   &lt NUMBERS BSPC   &lt SYMBOLS SPACE   &lt MOVEMENT DEL
//
//                    >;
//                };

//        HANDS_DOWN_layer {
//            display-name = "hands down neu";
// ------------------------------------------------------------------------------------------------------------
//         |   1   |   2   |    3    |   4    |   5   |              |  6  |   7    |    8    |   9   |   0   |       
//         |   Q   |   W   |    E    |   R    |   T   |              |  Y  |   U    |    I    |   O   |   P   |        
// |  TAB  | ALT/A | GUI/S | SHIFT/D | CTRL/F |   G   |              |  H  | CTRL/J | SHIFT/K | GUI/L | ALT/; | ENTER |
// |   \   |   Z   |   X   |    C    |   V    |   B   |              |  N  |   M    |    ,    |   .   |   /   |   '   |
//                                      | LOWER  | SPACE | ESC |  | DEL |BACK | RAISE  | 
//            bindings = <
//            &kp N1     &kp N2     &kp N3           &kp N4            &kp N5                &kp N6              &kp N7           &kp N8      &kp N9     &kp N0
//            &kp W      &kp F      &kp M            &kp P             &kp V                 &kp FSLH            &kp DOT          &kp Q       &kp SEMI   &kp APOSTROPHE
//&kp TAB     &hl LGUI R &hl LALT S &hl LCTRL N      &hl LSHIFT T      &kp B                 &kp COMMA           &hr RSHFT A      &hr RCTRL E &hr LALT I &hr RGUI H    &kp J
//&caps_word  &kp X      &kp C      &kp L            &kp D             &kp G                 &kp FSLH            &kp U            &kp O       &hr RALT Y &kp K         &kp Z
//                                  &lt MOVEMENT ESC &lt SYMBOLS SPACE &lt NUMBERS TAB       &lt NUMBERS ENTER   &lt SYMBOLS BSPC &lt MOVEMENT DEL
//
//                    >;
//                };

//        COLEMAK_dh_layer {
//            display-name = "colemak dh";
//// ------------------------------------------------------------------------------------------------------------
////         |   1   |   2   |    3    |   4    |   5   |              |  6  |   7    |    8    |   9   |   0   |       
////         |   Q   |   W   |    E    |   R    |   T   |              |  Y  |   U    |    I    |   O   |   P   |        
//// |  TAB  | ALT/A | GUI/S | SHIFT/D | CTRL/F |   G   |              |  H  | CTRL/J | SHIFT/K | GUI/L | ALT/; | ENTER |
//// |   \   |   Z   |   X   |    C    |   V    |   B   |              |  N  |   M    |    ,    |   .   |   /   |   '   |
////                                      | LOWER  | SPACE | ESC |  | DEL |BACK | RAISE  | 
//            bindings = <
//            &kp N1     &kp N2     &kp N3           &kp N4            &kp N5                &kp N6              &kp N7           &kp N8      &kp N9     &kp N0
//            &kp Q      &kp W      &kp F            &kp P             &kp B                 &kp J               &kp L            &kp U       &kp Y      &kp SEMI
//&kp TAB     &hl LGUI A &hl LALT R &hl LCTRL S      &hl LSHIFT T      &kp G                 &kp M               &hr RSHFT N      &hr RCTRL E &hr RALT I &hr RGUI O    &kp ENTER
//&caps_word  &kp Z      &kp X      &kp C            &kp D             &kp V                 &kp K               &kp H            &kp COMMA   &kp DOT    &kp FSLH      &kp Z
//                                  &lt MOVEMENT ESC &lt SYMBOLS SPACE &lt NUMBERS TAB       &lt NUMBERS ENTER   &lt SYMBOLS BSPC &lt MOVEMENT DEL
//
//                    >;
//                };

        MOVEMENT_layer {
            display-name = "Movement";
// ------------------------------------------------------------------------------------------------------------
//         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
//         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
// | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
// |       |      |        |         | QWERTY      |  boot  |                | boot  |      |       |      |  POWER   | reset |
//                                   |             |        |      |  |      |       |      |
//            bindings = <
//        &none      &none    &none     &none      &none              &kp PAGE_DOWN   &kp HOME        &none         &kp END          &kp PAGE_UP 
//        &none      &none    &none     &none      &none              &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none 
//&kp TAB &kp LGUI   &kp LALT &kp LCTRL &kp LSHFT  &none              &none           &none           &none         &none            &none       &none 
//&none   &kp N6     &kp Q    &kp W     &kp E      &kp R              &none           &none           &none         &none            &none       &none
//                            &none     &none      &none              &none           &kp BACK        &kp DEL
//            >;
            bindings = <
          &kp N1     &kp N2      &kp N3           &kp N4            &kp N5                &kp N6            &kp N7           &kp N8          &kp N9           &kp N0
          &none      &none   	 &m_pegar         &m_copiar         &m_cortar             &kp HOME          &kp PAGE_DOWN    &kp PAGE_UP     &kp END          &kp PAGE_UP 
&kp DEL   &kp LGUI   &kp LALT    &kp LCTRL        &kp LSHFT         &none 		  &kp LEFT_ARROW    &kp DOWN_ARROW   &kp UP_ARROW    &kp RIGHT_ARROW  &none         &none
&kp BSLH  &none      &none       &m_close_window  &m_deshacer       &kp DEL               &none             &none            &none           &none            &none         &kp SQT
                                 &none            &none             &none                 &kp ENTER         &kp BSPC         &kp DEL

                    >;
        };

        SYMBOLS_layer {
            display-name = "symbols";
        // ------------------------------------------------------------------------------------------------------------
        //         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
        //         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
// | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
// |       |      |        |         | QWERTY      |  boot  |                | boot  |      |       |      |  POWER   | reset |
//                                   |             |        |      |  |      |       |      |
            bindings = <
          //&kp N1        &kp N2             &kp N3               &kp N4          &kp N5                     &kp RA(N4)        &td_fwdslash   &kp LS(N6)   &kp N9         &kp N0 
          //&kp GRAVE     &kp RA(N4)         &kp LS(N0)           &kp LS(N0)      &kp NON_US_BACKSLASH       &td_interrogante  &td_brackets   &td_puntos   &td_marcas_vim &kp RA(N2) 
//&none   &kp LS(EQUAL) &kp RA(APOSTROPHE) &kp RA(LEFT_BRACKET) &kp LS(N8)      &kp LS(N7)                 &td_exclamaciones &td_parentesis &td_coma     &td_buscar_vim &td_porcentaje  &none 
//&none   &kp EQUAL     &kp LS(N6)         &kp LS(N4)           &kp LS(N5)      &kp RA(N1)                 &td_fwdslash      &td_cbrackets  &td_menorque &td_pipe       &kp LS(N1)         &none
                                          //&kp LS(LEFT_BRACKET) &kp APOSTROPHE  &kp LS(APOSTROPHE)         &kp LS(N0)        &td_guion      &td_masmenos

          &kp N1        &kp N2             &kp N3               &kp N4          &kp N5                     &kp N6                    &kp N7        &kp N8                &kp N9            &kp N0 
          &kp GRAVE     &kp RA(N4)         &kp LS(N6)           &kp LS(N0)      &kp NON_US_BACKSLASH       &kp LS(NON_US_BACKSLASH)  &kp LS(RBKT)  &kp RBKT              &kp RA(N3)        &kp RA(N2) 
&none     &kp LS(EQUAL) &kp RA(APOSTROPHE) &kp RA(LEFT_BRACKET) &kp LS(N8)      &kp LS(N7)                 &kp RA(GRAVE)             &kp LS(N9)    &kp RA(RIGHT_BRACKET) &kp RA(BACKSLASH) &kp LS(MINUS)  &none 
&none     &kp EQUAL     &kp LS(N6)         &kp LS(N4)           &kp LS(N5)      &kp RA(N1)                 &kp LS(N2)                &kp MINUS     &kp LEFT_BRACKET      &kp APOSTROPHE    &kp LS(N1)     &none
                                           &kp LS(LEFT_BRACKET) &kp APOSTROPHE  &kp LS(APOSTROPHE)         &none                     &kp LS(COMMA) &none                                 
                                       
            >;
        };

        NUMBERS_layer {
            display-name = "numbers";
// ------------------------------------------------------------------------------------------------------------
//         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
//         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
// | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
// |       |      |        |         | QWERTY      |  boot  |                | boot  |      |       |      |  POWER   | reset |
//                                   |             |        |      |  |      |       |      |
            bindings = <
          &none     &kp F10    &kp F11 &kp F12 &none       &none         &none    &none             &none     &none 
          &none     &kp F7     &kp F8  &kp F9  &none       &kp STAR      &kp N7   &kp N8            &kp N9    &kp MINUS
&none     &none     &kp F4     &kp F5  &kp F6  &none       &kp SLASH     &kp N4   &kp N5            &kp N6    &kp PLUS         &none 
&none     &none     &kp F1     &kp F2  &kp F3  &none       &kp PERIOD    &kp N1   &kp N2            &kp N3    &kp LEFT_BRACKET &none
                               &none   &none   &none       &kp BACKSLASH &kp N0   &kp LS(BACKSLASH)
            >;
        };

        WASD_layer {
            display-name = "WASD-gaming";
// ------------------------------------------------------------------------------------------------------------
//         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
//         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
// | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
// |       |      |        |         | QWERTY      |  boot  |                | boot  |      |       |      |  POWER   | reset |
//                                   |             |        |      |  |      |       |      |
            bindings = <
          &kp N1     &kp N2   &kp N3   &kp N4         &kp N5                            &none  &none  &none  &none  &none 
          &kp TAB    &kp Q    &kp W    &kp E          &kp R                             &none  &none  &none  &none  &none 
&kp ENTER &kp LSHFT  &kp A    &kp S    &kp D          &kp F                             &none  &none  &none  &none  &none &none 
&kp ESC   &kp LCTRL  &kp Z    &kp X    &kp C          &kp V                             &none  &none  &none  &none  &none &none 
                              &lt NUMBERS LALT &mo EXTRA_WASD &kp SPACE                    &none  &none  &none 
            >;
        };

        EXTRA_WASD_layer {
            display-name = "WASD-gaming-extra";
// ---------------------------------------------------
//         |      |       |     |   Y  |  H   |     
//         |      |       |     |   I  |  T   |           
// |  ALT  |      |       |     |   J  |  G   |  
// |       |      |       |     |   M  |  B   |  
//                              |      |      |        |    
            bindings = <
          &kp U      &kp M    &kp N    &kp Y    &kp H                  &trans    &trans  &trans  &trans  &trans  
          &kp ESC    &kp O    &kp L    &kp I    &kp T                  &trans    &trans  &trans  &trans  &trans  
&kp LALT  &kp TAB    &trans   &trans   &kp J    &kp G                  &trans    &trans  &trans  &trans  &trans   &trans  
&trans    &trans     &trans   &kp N    &kp M    &kp B                  &trans    &trans  &trans  &trans  &trans   &trans  
                              &trans   &trans   &trans                 &trans    &trans  &trans
            >;
        };

        extra4 {
            status = "reserved";
        };

        extra5 {
            status = "reserved";
        };
    };
};
