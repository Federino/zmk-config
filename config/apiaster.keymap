#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE        0
#define MOVEMENT    1
#define SYMBOLS     2
#define NUMBERS     3
//#define COLEMAK     1
//#define LOWER       2
//#define RAISE       3
//#define WASD        4
//#define EXTRA_WASD  5
//#define WASD_TYPE   6

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34 35 36 37
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 38 39 40 41 42 43
#define THUMBS_L 44 45 46
#define THUMBS_R 47 48 49


&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {    
    //macros {
    //    wasdt: wasd_type {
    //        compatible = "zmk,behavior-macro";
    //        #binding-cells = <0>;
    //        bindings
    //            = <&macro_tap &tog WASD &tog WASD_TYPE>;
    //    };
    //};
    
    macros {
        caps_words_macro: caps_words_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp J>,
                  <&macro_press &kp K>,
                  <&macro_press &kp P>;
        };
    };

    behaviors {
        hl: home_row_hold_tap_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS_R>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hr: home_row_hold_tap_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS_L>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        td_rst: reset_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sys_reset>, <&bootloader>;
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };

    };


    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            display-name = "qwerty";
// ------------------------------------------------------------------------------------------------------------
//         |   1   |   2   |    3    |   4    |   5   |              |  6  |   7    |    8    |   9   |   0   |       
//         |   Q   |   W   |    E    |   R    |   T   |              |  Y  |   U    |    I    |   O   |   P   |        
// |  TAB  | ALT/A | GUI/S | SHIFT/D | CTRL/F |   G   |              |  H  | CTRL/J | SHIFT/K | GUI/L | ALT/; | ENTER |
// |   \   |   Z   |   X   |    C    |   V    |   B   |              |  N  |   M    |    ,    |   .   |   /   |   '   |
//                                      | LOWER  | SPACE | ESC |  | DEL |BACK | RAISE  | 
            bindings = <&caps_words_macro>, 
                       <
            &kp N1     &kp N2     &kp N3           &kp N4            &kp N5                &kp N6              &kp N7           &kp N8      &kp N9     &kp N0
            &kp Q      &kp W      &kp E            &kp R             &kp T                 &kp Y               &kp U            &kp I       &kp O      &kp P
&kp TAB     &hl LGUI A &hl LALT S &hl LCTRL D      &hl LSHIFT F      &kp G                 &kp H               &hr RSHFT J      &hr RCTRL K &hr RALT L &hr RGUI SEMI &kp APOSTROPHE
&caps_word  &kp Z      &kp X      &kp C            &kp V             &kp B                 &kp N               &kp M            &kp COMMA   &kp DOT    &kp FSLH      &kp SQT
                                &lt MOVEMENT ESC &lt SYMBOLS SPACE &lt NUMBERS TAB       &lt NUMBERS ENTER   &lt SYMBOLS BSPC &lt MOVEMENT DEL

                    >;
                };

        movement_layer {
            display-name = "Movement";
// ------------------------------------------------------------------------------------------------------------
//         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
//         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
// | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
// |       |      |        |         | QWERTY      |  boot  |                | boot  |      |       |      |  POWER   | reset |
//                                   |             |        |      |  |      |       |      |
//            bindings = <
//        &none      &none    &none     &none      &none              &kp PAGE_DOWN   &kp HOME        &none         &kp END          &kp PAGE_UP 
//        &none      &none    &none     &none      &none              &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none 
//&kp TAB &kp LGUI   &kp LALT &kp LCTRL &kp LSHFT  &none              &none           &none           &none         &none            &none       &none 
//&none   &kp N6     &kp Q    &kp W     &kp E      &kp R              &none           &none           &none         &none            &none       &none
//                            &none     &none      &none              &none           &kp BACK        &kp DEL
//            >;
            bindings = <
          &kp N1     &kp N2     &kp N3           &kp N4            &kp N5                &kp N6              &kp N7           &kp N8        &kp N9           &kp N0
          &none      &none      &none            &none             &none                 &kp PAGE_DOWN       &kp HOME         &none         &kp END          &kp PAGE_UP 
&kp TAB   &kp LGUI   &kp LALT   &kp LCTRL        &kp LSHFT         &none                 &kp LEFT_ARROW      &kp DOWN_ARROW   &kp UP_ARROW  &kp RIGHT_ARROW  &none         &none
&kp BSLH  &none      &none      &none            &none             &none                 &none               &none            &none         &none            &none         &kp SQT
                                &none            &none             &none                 &kp ENTER           &kp BSPC         &kp DEL

                    >;
        };

        symbols_layer {
            display-name = "symbols";
        // ------------------------------------------------------------------------------------------------------------
        //         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
        //         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
// | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
// |       |      |        |         | QWERTY      |  boot  |                | boot  |      |       |      |  POWER   | reset |
//                                   |             |        |      |  |      |       |      |
            bindings = <
          &kp N1        &kp N2             &kp N3               &kp N4          &kp N5                     &kp N6            &kp N7        &kp N8                &kp N9            &kp N0 
          &kp GRAVE     &kp RA(N4)         &kp LS(N0)           &kp LS(N0)      &kp BACKSLASH              &kp LS(BACKSLASH) &kp PLUS      &kp STAR              &kp RA(N3)        &kp RA(N2) 
&none     &kp LS(EQUAL) &kp RA(APOSTROPHE) &kp RA(LEFT_BRACKET) &kp LS(N8)      &kp LS(N7)                 &kp RA(GRAVE)     &kp LS(N9)    &kp RA(RIGHT_BRACKET) &kp RA(BACKSLASH) &kp LS(MINUS)  &none 
&none     &kp EQUAL     &kp LS(N6)         &kp LS(N4)           &kp LS(N5)      &kp RA(N1)                 &kp LS(N2)        &kp MINUS     &kp LEFT_BRACKET      &kp APOSTROPHE    &kp LS(N1)     &none
                                           &kp LS(LEFT_BRACKET) &kp APOSTROPHE  &kp LS(APOSTROPHE)         &none             &kp LS(COMMA) &none
                                       
            >;
        };

        numbers_layer {
            display-name = "numbers";
// ------------------------------------------------------------------------------------------------------------
//         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
//         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
// | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
// |       |      |        |         | QWERTY      |  boot  |                | boot  |      |       |      |  POWER   | reset |
//                                   |             |        |      |  |      |       |      |
            bindings = <
          &none     &kp F10    &kp F11 &kp F12 &none       &none         &none    &none             &none     &none 
          &none     &kp F7     &kp F8  &kp F9  &none       &kp STAR      &kp N7   &kp N8            &kp N9    &kp MINUS
&none     &none     &kp F4     &kp F5  &kp F6  &none       &kp SLASH     &kp N4   &kp N5            &kp N6    &kp PLUS         &none 
&none     &none     &kp F1     &kp F2  &kp F3  &none       &kp PERIOD    &kp N1   &kp N2            &kp N3    &kp LEFT_BRACKET &none
                               &none   &none   &none       &kp BACKSLASH &kp N0   &kp LS(BACKSLASH)
            >;
        };

 //               graphite_layer {
 //                   display-name = "graphite";
 //       // ------------------------------------------------------------------------------------------------------------
 //       //         |   1   |   2   |    3    |   4    |   5   |              |  6  |   7    |    8    |   9   |   0   |       
 //       //         |   B   |   L   |    D    |   W    |   Z   |              |  '  |   F    |    O    |   U   |   J   |        
 //       // |  TAB  | ALT/N | GUI/R | SHIFT/T | CTRL/S |   G   |              |  Y  | CTRL/H | SHIFT/A | GUI/E | ALT/I | ENTER |
 //       // |   \   |   Q   |   X   |    M    |   C    |   V   |              |  K  |   P    |    .    |   -   |   ,   |   /   |
 //       //                                   | LOWER  | SPACE | ESC |  | DEL |BACK | RAISE  | 
 //                   bindings = <
 //               &kp N1     &kp N1     &kp N1      &kp N1     &kp N1                      &kp N6    &kp N7      &kp N8      &kp N9     &kp N0
 //               &kp B      &kp L      &kp D       &kp W       &kp Z                       &kp SQT     &kp F       &kp O       &kp U    &kp J
 //       &kp TAB   &hl LALT N &hl LGUI R &hl LSHFT T &hl LCTRL S &kp G                       &kp Y     &hr RCTRL H &hr RSHFT A &hr RGUI E &hr RALT I &kp ENTER
 //       &kp BSLH  &kp Q      &kp X      &kp M       &kp C       &kp V                       &kp K     &kp P       &kp DOT   &kp MINUS    &kp COMMA  &kp FSLH
 //                                                   &kp C   &kp SPACE &kp ESC &kp DEL &kp BSPC &kp P
 //                   >;
 //               };
//
//                lower_layer {
//                    display-name = "lower";
//        // ------------------------------------------------------------------------------------------------------------
//        // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |       |
//        // |       |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
//        // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |  F11  |
//        // |   |   |  =  |  -  |  +   |  {   |  }   |                   |  [   |  ]    |  ;    |  :   |   \   |  F12  |
//        //               |     |      |      |      |        |  |       |      |       |       |      |
//                    bindings = <
//                &kp F2        &kp F3      &kp F4         &kp F5         &kp F6                  &kp F7    &kp F8         &kp F9          &kp F10       &kp F11   
//                &kp N1        &kp N2      &kp N3         &kp N4         &kp N5                  &kp N6    &kp N7         &kp N8          &kp N9        &kp N0    
//        &kp F1   &hl LALT EXCL &hl LGUI AT &hl LSHFT HASH &hl LCTRL DLLR &kp PRCNT               &kp CARET &hr RCTRL AMPS &hr RSHFT ASTRK &hr RGUI LPAR &hr RALT RPAR &kp F12
//        &kp PIPE &kp EQUAL     &kp MINUS   &kp PLUS       &kp LBRC       &kp RBRC                &kp LBKT  &kp RBKT       &kp SEMI        &kp COLON     &kp GRAVE     &kp BSLH 
//                                                        &trans         &trans    &trans &trans &trans    &trans     
//                    >;
//                };
//
//                raise_layer {
//                    display-name = "raise";
//        // ------------------------------------------------------------------------------------------------------------
//        //         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
//        //         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
//        // | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
//        // |       |      |        | QWERTY  | WASD        |  boot  |                | boot  |      |       |      |  POWER   | reset |
//        //                                   |             |        |      |  |      |       |      |
//                    bindings = <
//            &kp C_MUTE &kp C_VOL_UP &kp C_VOL_DN &kp C_BRI_UP &kp  C_BRI_DN                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                 
//            &kp C_PREV &kp C_RW     &kp C_PP     &kp C_FF     &kp C_NEXT                   &kp PG_UP    &kp HOME     &kp UP       &kp END      &bt BT_CLR
//        &sys_reset &kp CLCK   &kp INS      &kp PSCRN    &kp K_CMENU  &studio_unlock               &kp PG_DN    &kp LEFT     &kp DOWN     &kp RIGHT    &soft_off   &sys_reset
//        &trans    &trans     &trans       &tog QWERTY  &to WASD     &bootloader                  &bootloader  &trans       &trans       &trans       &kp C_PWR   &trans
//                                                    &trans       &trans         &trans &trans &trans       &trans 
//                    >;
//                };
//            
//
//                wasd_layer {
//                    display-name = "WASD-gaming";
//        // ------------------------------------------------------------------------------------------------------------
//        //         | MUTE | VOL+   |  VOL-   | BRI+        |  BRI-  |                |  BT 0 | BT 1 |  BT 2 | BT 3 | BT 4     | 
//        //         | PREV | REWIND | PAUSE   | FASTFORWARD |  NEXT  |                | PGUP  | HOME |   ^   | END  | BT CLEAR |       
//        // | reset | CAPS | INS    | PRNTSCR | MENU        | studio |                | PGDN  |   <- |   v   |  ->  |  off     | reset |
//        // |       |      |        |         | QWERTY      |  boot  |                | boot  |      |       |      |  POWER   | reset |
//        //                                   |             |        |      |  |      |       |      |
//                    bindings = <
//                &kp N1     &kp N2   &kp N3   &kp N4   &kp N5                             &none  &none  &none  &none  &none 
//                &kp N6     &kp Q    &kp W    &kp E    &kp R                             &none  &none  &none  &none  &none 
//        &kp TAB   &kp LSHFT  &kp A    &kp S    &kp D    &kp F                             &none  &none  &none  &none  &none &none 
//        &none     &kp LCTRL  &kp Z    &kp X    &kp C    &kp V                             &none  &none  &none  &none  &none &none 
//                                            &mo EXTRA_WASD &kp SPACE &kp LALT   &wasdt  &none  &none 
//                    >;
//                };
//
//                extra_wasd_layer {
//                    display-name = "WASD-gaming-extra";
//        // ---------------------------------------------------
//        //         |      |       |     |   Y  |  H   |     
//        //         |      |       |     |      |  T   |           
//        // |  ALT  |      |       |     |      |  G   |  
//        // |       |      |       |     |      |  B   |  
//        //                              |      |      |        |    
//                    bindings = <
//                &trans     &trans   &trans   &kp Y    &kp H                  &trans    &trans  &trans  &trans  &trans  
//                &trans     &trans   &trans   &trans   &kp T                  &trans    &trans  &trans  &trans  &trans  
//        &kp LALT  &trans     &trans   &trans   &trans   &kp G                  &trans    &trans  &trans  &trans  &trans   &trans  
//        &trans    &trans     &trans   &trans   &trans   &kp B                  &trans    &trans  &trans  &trans  &trans   &trans  
//                                            &trans   &trans  &trans  &trans &trans    &trans
//                    >;
//                };
//                wasd_type_layer {
//                    display-name = "WASD-typing_macro";
//        // ---------------------------------------------------
//        //         |      |       |     |   Y  |  H   |     
//        //         |      |       |     |      |  T   |           
//        // |  ALT  |      |       |     |      |  G   |  
//        // |       |      |       |     |      |  B   |  
//        //                              |      |      |        |     
//                    bindings = <
//                &trans     &trans   &trans   &trans   &trans                 &trans    &trans  &trans  &trans  &trans  
//                &trans     &trans   &trans   &trans   &trans                 &trans    &trans  &trans  &trans  &trans  
//        &trans    &trans     &trans   &trans   &trans   &trans                 &trans    &trans  &trans  &trans  &trans   &trans  
//        &trans    &trans     &trans   &trans   &trans   &trans                 &trans    &trans  &trans  &trans  &trans   &trans  
//                                            &trans   &trans  &trans  &wasdt &trans    &trans
//                    >;
//                };


        extra4 {
            status = "reserved";
        };

        extra5 {
            status = "reserved";
        };
    };
};
